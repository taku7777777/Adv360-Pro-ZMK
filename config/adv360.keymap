/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT  0
#define KANA     1
#define QWERTY   2
#define NUMBER   2
#define ARROW    3
#define FUNCTION 4
#define FIRMWARE 5

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS"; 
        #binding-cells = <2>;
        tapping-term-ms = <160>;
        quick_tap_ms = <135>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
              &lt FIRMWARE TAB  &tog KANA       &none           &hm TILDE HASH  &none           &none         &none                                                                                                           &none         &none           &hm DLLR PRCNT  &none           &none             &none           &lt FIRMWARE TAB
              &none             &hm LS(Q) Q     &hm LS(W) W     &hm LS(E) E     &hm LS(R) R     &hm LS(T) T   &macro_hyper                                                                                                    &macro_next   &hm LS(Y) Y     &hm LS(U) U     &hm LS(I) I     &hm LS(O) O       &hm LS(P) P     &none
              &kp LCTRL         &hm LS(A) A     &hm LS(S) S     &hm LS(D) D     &hm LS(F) F     &hm LS(G) G   &macro_meh                  &kp C_VOL_DN       &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP                         &macro_back   &hm LS(H) H     &hm LS(J) J     &hm LS(K) K     &hm LS(L) L       &hm COLON SEMI  &hm DQT SQT
              &kp LSHIFT        &hm LS(Z) Z     &hm LS(X) X     &hm LS(C) C     &hm LS(V) V     &hm LS(B) B                                                  &kp C_MUTE    &none                                                            &hm LS(N) N     &hm LS(M) M     &hm COMMA DOT   &hm GRAVE EQUAL   &hm GT LT       &hm AT UNDER
              &kp LALT          &hm PIPE AMPS   &hm QMARK EXCL  &hm STAR FSLH   &hm PLUS MINUS                              &hm LGUI TAB  &lt NUMBER SPACE   &kp ESC       &kp RCTRL     &lt ARROW ENTER   &lt FUNCTION BSPC                                &hm RPAR LPAR   &hm RBRC LBRC   &hm RBKT LBKT     &hm RIGHT_ALT   &none
            >;
        };

        kana_layer {
            bindings = <
              &none      &tog KANA  &none       &none      &none      &none       &none                                                                                                 &none   &none      &none   &none   &none   &none   &none
              &none      &kp INT1   &kp INT2    &kp INT3   &kp INT4   &kp INT5    &none                                                                                                 &none   &none      &none   &none   &none   &none   &none
              &kp LCTRL  &kp LANG1  &kp LANG2   &kp LANG3  &kp LANG4  &kp LANG5   &kp LANG6                 &none              &none    &none      &none                                &none   &macro_ku  &none   &none   &none   &none   &none
              &kp LSHIFT &none      &none       &none      &none      &none                                                    &none    &none                                                   &none      &none   &none   &none   &none   &none
              &kp LALT   &none      &none       &none      &none                              &hm LGUI TAB  &lt NUMBER SPACE   &kp ESC  &kp RCTRL  &lt  ARROW ENTER   &lt FUNCTION BSPC                    &none   &none   &none   &none   &none
            >;
        };

        number_layer {
            bindings = <
              &none        &none   &none   &none   &none   &none   &none                                                          &none   &none   &none         &kp KP_SLASH  &kp KP_ASTERISK  &none         &none
              &none        &none   &none   &none   &none   &none   &none                                                          &none   &none   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9     &kp KP_MINUS  &none
              &kp LCTRL    &none   &none   &none   &none   &none   &none              &none   &none   &none       &none           &none   &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6     &kp KP_PLUS   &none
              &kp LSHIFT   &none   &none   &none   &none   &none                              &none   &none                               &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp KP_EQUAL  &none
              &kp LALT     &none   &none   &none   &none                   &kp LGUI   &trans  &none   &kp RCTRL   &none   &none                   &kp NUMBER_0  &kp KP_DOT    &kp KP_COMMA     &none         &none
            >;
        };

        arrow_layer {
            bindings = <
              &none      &none   &none   &none   &none   &none   &none                                                      &none   &none      &none     &none     &none       &none  &none
              &none      &none   &none   &none   &none   &none   &none                                                      &none   &kp PG_UP  &kp HOME  &kp UP    &kp END     &none  &none
              &kp LCTRL  &none   &none   &none   &none   &none   &none              &none   &none   &none   &none           &none   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT   &none  &none
              &kp LSHIFT &none   &none   &none   &none   &none                              &none   &none                           &none      &none     &none     &none       &none  &none
              &kp LALT   &none   &none   &none   &none                   &kp LGUI   &none   &none   &none   &trans  &none                      &none     &none     &none       &none  &none
            >;
        };

        function_layer {
            bindings = <
              &none      &none   &none   &none   &none        &none   &none                                                      &none   &none    &none   &none   &none   &none  &none
              &none      &none   &none   &none   &to KANA     &none   &none                                                      &none   &kp F12  &kp F7  &kp F8  &kp F9  &none  &none
              &kp LCTRL  &none   &none   &none   &tog KANA    &none   &none              &none   &none   &none   &none           &none   &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
              &kp LSHIFT &none   &none   &none   &to DEFAULT  &none                              &none   &none                           &kp F10  &kp F1  &kp F2  &kp F3  &none  &none
              &kp LALT   &none   &none   &none   &none                        &kp LGUI   &none   &none   &none   &none   &trans                   &none   &none   &none   &none  &none
            >;
        };

        bootloader_layer {
            bindings = <
              &trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                     &none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
              &none   &none        &none        &none        &none        &none        &bootloader                                                                               &bootloader &none         &none         &none         &none         &none         &none
              &none   &none        &none        &none        &none        &none        &none                        &bt BT_CLR &bt BT_CLR &bt BT_CLR &bt BT_CLR                  &none       &none         &none         &none         &none         &none         &none
              &none   &none        &none        &none        &none        &none                                                &bt BT_CLR &bt BT_CLR                                         &none         &none         &none         &none         &none         &none
              &none   &none        &none        &bl BL_INC   &bl BL_DEC                             &rgb_ug RGB_TOG &bl BL_TOG &none      &none      &bl BL_TOG &rgb_ug RGB_TOG                            &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        qwerty_layer {
            bindings = <
              &lt 4 TAB   &tog 5          &none           &hm TILDE HASH  &none           &none         &none                                                                                           &none         &none           &hm DLLR PRCNT  &none           &none             &none           &lt 4 TAB
              &none       &hm LS(Q) Q     &hm LS(W) W     &hm LS(E) E     &hm LS(R) R     &hm LS(T) T   &macro_hyper                                                                                    &macro_next   &hm LS(Y) Y     &hm LS(U) U     &hm LS(I) I     &hm LS(O) O       &hm LS(P) P     &none
              &kp LCTRL   &hm LS(A) A     &hm LS(S) S     &hm LS(D) D     &hm LS(F) F     &hm LS(G) G   &macro_meh                  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP              &macro_back   &hm LS(H) H     &hm LS(J) J     &hm LS(K) K     &hm LS(L) L       &hm COLON SEMI  &hm DQT SQT
              &kp LSHIFT  &hm LS(Z) Z     &hm LS(X) X     &hm LS(C) C     &hm LS(V) V     &hm LS(B) B                                             &kp C_MUTE    &none                                                 &hm LS(N) N     &hm LS(M) M     &hm COMMA DOT   &hm GRAVE EQUAL   &hm GT LT       &hm AT UNDER
              &kp LALT    &hm PIPE AMPS   &hm QMARK EXCL  &hm STAR FSLH   &hm PLUS MINUS                              &hm LGUI TAB  &lt 1 SPACE   &kp ESC       &kp RCTRL     &lt 2 ENTER   &lt 3 BSPC                                &hm RPAR LPAR   &hm RBRC LBRC   &hm RBKT LBKT     &hm RIGHT_ALT   &none
            >;
        };

        qgmlwy_layer {
            bindings = <
              &none       &none          &none           &hm TILDE HASH  &none           &none         &none                                                                                           &none         &none           &hm DLLR PRCNT  &none           &none             &none           &lt 4 TAB
              &none       &hm LS(Q) Q     &hm LS(W) W     &hm LS(E) E     &hm LS(R) R     &hm LS(T) T   &macro_hyper                                                                                    &macro_next   &hm LS(Y) Y     &hm LS(U) U     &hm LS(I) I     &hm LS(O) O       &hm LS(P) P     &none
              &kp LCTRL   &hm LS(A) A     &hm LS(S) S     &hm LS(D) D     &hm LS(F) F     &hm LS(G) G   &macro_meh                  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP              &macro_back   &hm LS(H) H     &hm LS(J) J     &hm LS(K) K     &hm LS(L) L       &hm COLON SEMI  &hm DQT SQT
              &kp LSHIFT  &hm LS(Z) Z     &hm LS(X) X     &hm LS(C) C     &hm LS(V) V     &hm LS(B) B                                             &kp C_MUTE    &none                                                 &hm LS(N) N     &hm LS(M) M     &hm COMMA DOT   &hm GRAVE EQUAL   &hm GT LT       &hm AT UNDER
              &kp LALT    &hm PIPE AMPS   &hm QMARK EXCL  &hm STAR FSLH   &hm PLUS MINUS                              &hm LGUI TAB  &lt 1 SPACE   &kp ESC       &kp RCTRL     &lt 2 ENTER   &lt 3 BSPC                                &hm RPAR LPAR   &hm RBRC LBRC   &hm RBKT LBKT     &hm RIGHT_ALT   &none
            >;
        };
    };
};
